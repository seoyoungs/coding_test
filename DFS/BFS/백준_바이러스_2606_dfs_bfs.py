'''
문제
신종 바이러스인 웜 바이러스는 네트워크를 통해 전파된다. 
한 컴퓨터가 웜 바이러스에 걸리면 그 컴퓨터와 네트워크 상에서 
연결되어 있는 모든 컴퓨터는 웜 바이러스에 걸리게 된다.

예를 들어 7대의 컴퓨터가 <그림 1>과 같이 네트워크 상에서 
연결되어 있다고 하자. 1번 컴퓨터가 웜 바이러스에 걸리면 
웜 바이러스는 2번과 5번 컴퓨터를 거쳐 3번과 6번 컴퓨터까지 
전파되어 2, 3, 5, 6 네 대의 컴퓨터는 웜 바이러스에 걸리게 된다.
하지만 4번과 7번 컴퓨터는 1번 컴퓨터와 네트워크상에서 
연결되어 있지 않기 때문에 영향을 받지 않는다.

어느 날 1번 컴퓨터가 웜 바이러스에 걸렸다. 
컴퓨터의 수와 네트워크 상에서 서로 연결되어 있는 정보가 주어질 때, 
1번 컴퓨터를 통해 웜 바이러스에 걸리게 되는 컴퓨터의 수를 
출력하는 프로그램을 작성하시오.

입력
첫째 줄에는 컴퓨터의 수가 주어진다. 
컴퓨터의 수는 100 이하이고 각 컴퓨터에는 1번 부터 차례대로 번호가 
매겨진다. 둘째 줄에는 네트워크 상에서 직접 연결되어 있는 
컴퓨터 쌍의 수가 주어진다. 이어서 그 수만큼 한 줄에 한 쌍씩 
네트워크 상에서 직접 연결되어 있는 컴퓨터의 번호 쌍이 주어진다.

출력
1번 컴퓨터가 웜 바이러스에 걸렸을 때, 1번 컴퓨터를 통해 
웜 바이러스에 걸리게 되는 컴퓨터의 수를 첫째 줄에 출력한다.

예제 입력 1 
7
6
1 2
2 3
1 5
5 2
5 6
4 7

예제 출력 1 
4
'''
# ================= dfs ======================================
n = int(input())
p = int(input())

graph = [[0]*(n+1) for i in range(n+1)]

virous = []

# 예제출력을 보면 2개이니 두개로 나눈다
for i in range(p):
    x, y = map(int, input().split())
    graph[x][y], graph[y][x] = 1, 1

def dfs(v): 
    virous.append(v) 
    for k in range(1, n+1): # 1 ~ n번까지 
        if (k not in virous) and (graph[v][k] == 1): 
            dfs(k) 
    return (len(virous) - 1) # 1번을 제외한 컴퓨터 수 print(dfs(1))

print(dfs(1)) # 컴퓨터의 첫째줄 출력
# =============================================================

# ===================== bfs =============================
n = int(input())
p = int(input())
graph = [[0 for i in range(n + 1)] for i in range(n + 1)]

#2차원 배열 안에 넣어주기
for i in range(p):
    x, y = map(int, input().split())
    graph[x][y], graph[y][x] = 1, 1

#1과 연결된 모든 노드 뽑기
def bfs(graph, v):
    q = [v]
    visited = []

    while q:
        temp = q.pop(0) # 삭제 할 때 쓰는 것
        visited.append(temp)
        
        for i in range(len(graph)):
            if graph[temp][i] and i not in visited and i not in q:
                q.append(i)
                
    return len(visited) - 1

#1을 제외한 감염된 노드 수 출력
print(bfs(graph, 1))
# =======================================================

