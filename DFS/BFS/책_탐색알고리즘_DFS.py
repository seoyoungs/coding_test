# DFS는 깊이 우선 탐색이라고 부르며, 그래프에서
# 깊은 부분을 우선적으로 탐색하는 알고리즘 
# 그래프는 노드와 간선으로 연결 
# 두 노드가 간선으로 연결되어 있다면 '두 노드는 인접하다' 고 표현
# 그래프는 두가지 방식으로 표현
# 1. 인접행렬: 2차원 배열로 그래프의 연결 관계를 표현하는 방식
# 2. 인접이스트: 리스트로 그래프의 연결관계를 표현하는 방식

# 인접행렬 방식 예제
INF = 9999999999 # 무한 비율 선언

# 2차원리스트를 이용해 인접 행렬 표현
graph = [[0,7,5], [7,0,INF], [5, INF, 0]]
print(graph)

# 인접리스트 방식 예제
# 리스트 역할을 파이썬은 append가 대신하고 있다
# 행(row)이 3개인 2차원 리스트로 인접 리스트 표현
graph = [[] for _ in range(3)]

# 노드 0에 연결된 노드 정보 저장(노드, 거리)
graph[0].append((1,7))
graph[1].append((2,5))

# 노드 1에 연결된 노드 정보 저장(노드, 거리)
graph[1].append((0,7))

# 노드 2에 연결된 노드 정보 저장(노드, 거리)
graph[2].append((0,5))

print(graph)
